package inheritance;
/*
 * Defining a method with same name in different classes with different implementation 
 * exihibiting different behaviours of object is called polymorphism. 
 * -For defining the polymorphism we must define method in all subclasses with same name 
 * and its prototype as it is declared in superclass.
 * 
 * Types of polymorphism:
 * 1)Compile time polymorphism: When we invoke the method and it bind at compilation time is 
 * and execute by jvm at runtime is called static/early/compile time polymorphism.
 * Ex: Static, overloaded method, non static method which are not overriden are compile time poly.
 *   
 * 2)Run time polymorphism: When method is invoked then the method which is bind at compile time 
 * will not execute at runtime instead of this method will execute from current object class.
 * Ex: Only non static overriding method comes under the RunTime Polymorphism.
 *
 * -To develope the Run time polymorphism we must store object into the superclass referenece variable 
 * So Run time polymorphism is only implemented using the 
 * 1)Upcasting
 * 2)Method Overrriding.
 */
class Parent {
	void m1(){
		System.out.println("Parent class m1 method");
	}
    void m2(){
		System.out.println("Parent class m2 method");
	} 	
}	

class Child extends Parent {
	void m1(){
		System.out.println("Parent class m1 method");
	}	
}
class Polymorphism {

	public static void main(String[] args) {
		
		Child obj = new Child();
        obj.m1();
		obj.m2();
		
		Parent obj1 = new Child();
        obj1.m1();
		obj1.m2();

	}

}

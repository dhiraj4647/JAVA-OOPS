package dhiraj;

class Z{
	void m1() {
		System.out.println("I am m1 method");
	}
	final void m2() {
		System.out.println("I am method21");
		m4();
	}
	private void m3() {
		System.out.println("I am m3 method");
		
	}
	final static void m4() {
		System.out.println("I am m4 method1");
	}
}

public class FinalMethod extends Z{
	final void m1() {
		System.out.println("I am m1 method");
	}
	final void m2(int x) {
		System.out.println("I am method2");
	}
	private void m3() {
		System.out.println("I am m3 method");
	}
	final static void m4(int c) {
		System.out.println("I am m4 method");
	}
	void m5() {
		super.m2();//final method cannot be override but can be inherited.
		//super.m3();Here private cannot be override(both class have its own m3()method and it cannot 
		//be inherited.
	}
	public static  void main(String[] args) {
		FinalMethod obj=new FinalMethod();
		obj.m5();
		E obj2=new E();
		
	}
}
class D{
	public static final void main(String[] args) {
		System.out.println("I am main");
	}
}
class E extends D{
	static int a=90;
	int b=80;
	static {
		System.out.println("I am static block");
		System.out.println("A:"+a);
		System.out.println("B:"+new E().b);
		main(new String[0]);
	}
}
/*
final method is used to stop override this method.
we can override non-final method into final method.
-private method can be overridden but final method cannot be overridden.
private method cannot called from subclass but final can.
-We can overload final method ex:m5() method.
-We can override the non final class into final one ex:m3() method.
*/
